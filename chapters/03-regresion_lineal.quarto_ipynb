{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Regresión lineal\n",
        "\n",
        "## Regresión Lineal Simple\n",
        "\n",
        "Comenzaremos con el caso más sencillo: predecir una variable de resultado `Y` a partir de una única variable predictora `X`.\n",
        "\n",
        "El modelo matemático que queremos ajustar es una línea recta:\n",
        "\n",
        "$$Y = \\beta_0 + \\beta_1 X + \\epsilon$$\n",
        "\n",
        "Donde:\n",
        "\n",
        "- **$Y$**: La variable dependiente (lo que queremos predecir).\n",
        "- **$X$**: La variable independiente (nuestro predictor).\n",
        "- **$\\beta_0$**: El intercepto (el valor de $Y$ cuando $X=0$).\n",
        "- **$\\beta_1$**: La pendiente (cuánto cambia $Y$ por cada unidad que aumenta $X$).\n",
        "- **$\\epsilon$**: El término de error (la parte de $Y$ que nuestro modelo no puede explicar).\n",
        "\n",
        "Nuestro objetivo 🎯 es encontrar los **mejores valores posibles** para los coeficientes $\\beta_0$ y $\\beta_1$ usando los datos que tenemos.\n",
        "\n",
        "\n",
        "\n",
        "### ¿Cómo estimamos los coeficientes $\\beta_0$ y $\\beta_1$?\n",
        "\n",
        "\"Mejor\" para nosotros significa encontrar la línea que minimice la distancia vertical entre cada punto de dato y la propia línea. Específicamente, minimizamos la **Suma de los Errores al Cuadrado** (SEC o *Sum of Squared Errors*, SSE).\n",
        "\n",
        "La función de costo (o pérdida) que queremos minimizar es:\n",
        "\n",
        "$$J(\\beta_0, \\beta_1) = \\sum_{i=1}^{n} (y_i - (\\beta_0 + \\beta_1 x_i))^2$$\n",
        "\n",
        "Tenemos dos métodos principales para encontrar los $\\beta$ que minimizan esta función:\n",
        "\n",
        "#### Método 1: Las Ecuaciones Normales (La solución analítica 🧠)\n",
        "\n",
        "Este método utiliza cálculo para encontrar el mínimo exacto de la función de costo. Para ello, tomamos las derivadas parciales de $J$ con respecto a $\\beta_0$ y $\\beta_1$, las igualamos a cero y resolvemos para los coeficientes.\n",
        "\n",
        "::: {.callout-note collapse=\"true\"}\n",
        "## **Derivada parcial con respecto a $\\beta_0$**:\n",
        "$$\\frac{\\partial J}{\\partial \\beta_0} = \\sum_{i=1}^{n} -2(y_i - \\beta_0 - \\beta_1 x_i) = 0$$\n",
        "$$\\sum y_i - n\\beta_0 - \\beta_1 \\sum x_i = 0$$\n",
        "$$\\hat{\\beta}_0 = \\bar{y} - \\hat{\\beta}_1 \\bar{x}$$\n",
        "::: \n",
        "\n",
        "::: {.callout-note collapse=\"true\"}\n",
        "## **Derivada parcial con respecto a $\\beta_1$**\n",
        "$$\\frac{\\partial J}{\\partial \\beta_1} = \\sum_{i=1}^{n} -2x_i(y_i - \\beta_0 - \\beta_1 x_i) = 0$$\n",
        "Sustituyendo $\\beta_0$ de la primera ecuación y resolviendo, llegamos a:\n",
        "$$\\hat{\\beta}_1 = \\frac{\\sum_{i=1}^{n} (x_i - \\bar{x})(y_i - \\bar{y})}{\\sum_{i=1}^{n} (x_i - \\bar{x})^2}$$\n",
        "::: \n",
        "\n",
        "Estas fórmulas nos dan los valores óptimos y exactos de los coeficientes directamente a partir de los datos.\n",
        "\n",
        "#### Método 2: Descenso en Gradiente (La solución iterativa ⚙️)\n",
        "\n",
        "Este es un método computacional que nos \"acerca\" progresivamente a la solución. Es especialmente útil cuando tenemos una cantidad masiva de datos y calcular la solución analítica es muy costoso.\n",
        "\n",
        "**La intuición:** Imagina que estás en una montaña (la función de costo) y quieres llegar al valle (el costo mínimo). El Descenso en Gradiente te dice que mires a tu alrededor y des un paso en la dirección más inclinada hacia abajo. Repites esto hasta llegar al fondo.\n",
        "\n",
        "\n",
        "\n",
        "El algoritmo funciona así:\n",
        "\n",
        "1.  **Inicializa** los coeficientes $\\beta_0$ y $\\beta_1$ con valores aleatorios (o en ceros).\n",
        "2.  **Calcula el gradiente** de la función de costo. El gradiente es un vector que apunta en la dirección del máximo ascenso. Nosotros iremos en la dirección opuesta.\n",
        "    -   $\\frac{\\partial J}{\\partial \\beta_0} = -2 \\sum (y_i - (\\beta_0 + \\beta_1 x_i))$\n",
        "    -   $\\frac{\\partial J}{\\partial \\beta_1} = -2 \\sum x_i(y_i - (\\beta_0 + \\beta_1 x_i))$\n",
        "3.  **Actualiza** los coeficientes usando una **tasa de aprendizaje** ($\\alpha$), que controla el tamaño del paso que damos.\n",
        "    -   $\\beta_0 := \\beta_0 - \\alpha \\frac{\\partial J}{\\partial \\beta_0}$\n",
        "    -   $\\beta_1 := \\beta_1 - \\alpha \\frac{\\partial J}{\\partial \\beta_1}$\n",
        "4.  **Repite** los pasos 2 y 3 durante un número determinado de iteraciones o hasta que el cambio en el costo sea muy pequeño (convergencia).\n",
        "\n",
        "::: {.callout-note collapse=\"true\"}\n",
        "#### Explicacion visual\n",
        "![](imgs/gradient_descent.gif)\n",
        ":::\n",
        "\n",
        "## ¿Cuáles son los supuestos de la regresión? 🧐\n",
        "\n",
        "Para que nuestro modelo sea confiable (es decir, para que los coeficientes y las predicciones tengan sentido), debemos cumplir con ciertos supuestos.\n",
        "\n",
        "1.  **Linealidad:** La relación entre $\\beta$ y $Y$ debe ser lineal.\n",
        "    -   **¿Para qué sirve?** Si la relación no es lineal, nuestro modelo de línea recta será intrínsecamente incorrecto.\n",
        "\n",
        "2.  **Independencia de los errores:** Los errores (residuos) no deben estar correlacionados entre sí.\n",
        "    -   **¿Para qué sirve?** Es crucial para datos de series temporales. Si los errores están correlacionados, la información de un error nos da pistas sobre el siguiente, lo cual viola la idea de que cada observación es independiente.\n",
        "\n",
        "3.  **Homocedasticidad (Varianza constante de los errores):** La varianza de los errores debe ser constante para todos los niveles de $X$.\n",
        "    -   **¿Para qué sirve?** Si la varianza cambia (heterocedasticidad), nuestras predicciones serán mejores para algunas partes de los datos que para otras, y los intervalos de confianza para los coeficientes serán poco fiables. Visualmente, en un gráfico de residuos vs. valores predichos, no queremos ver una forma de cono o embudo.\n",
        "\n",
        "4.  **Normalidad de los errores:** Los errores deben seguir una distribución normal con media cero.\n",
        "    -   **¿Para qué sirve?** Este supuesto es fundamental para poder realizar pruebas de hipótesis sobre los coeficientes (como los p-values) y construir intervalos de confianza. Podemos verificarlo con un histograma de los residuos o un gráfico Q-Q.\n",
        "\n",
        "---\n",
        "\n",
        "## ¿Cómo evaluar la precisión del modelo? 📈\n",
        "\n",
        "Una vez que hemos ajustado el modelo, ¿cómo sabemos si es bueno?\n",
        "\n",
        "### Coeficiente de Determinación ($R^2$)\n",
        "\n",
        "El **$R^2$** mide la proporción de la varianza total en la variable dependiente ($Y$) que es explicada por nuestro modelo.\n",
        "\n",
        "$$R^2 = 1 - \\frac{\\text{Suma de Errores al Cuadrado (SEC)}}{\\text{Suma Total de Cuadrados (STC)}} = 1 - \\frac{\\sum (y_i - \\hat{y}_i)^2}{\\sum (y_i - \\bar{y})^2}$$\n",
        "\n",
        "-   $R^2$ varía entre 0 y 1 (o 0% y 100%).\n",
        "-   Un $R^2$ de 0.85 significa que el 85% de la variabilidad en $Y$ puede ser explicada por $X$.\n",
        "-   Un $R^2$ más alto generalmente indica un mejor ajuste del modelo.\n",
        "\n",
        "### p-values (Valores p)\n",
        "\n",
        "El **p-value** nos ayuda a determinar si nuestra variable predictora $X$ es **estadísticamente significativa**. Responde a la pregunta: ¿Es probable que la relación que observamos entre $X$ y $Y$ haya ocurrido por puro azar?\n",
        "\n",
        "-   **Hipótesis Nula ($H_0$):** No hay relación entre $X$ y $Y$ (es decir, $\\beta_1 = 0$).\n",
        "-   **Hipótesis Alternativa ($H_a$):** Sí hay una relación entre $X$ y $Y$ (es decir, $\\beta_1 \\neq 0$).\n",
        "\n",
        "Un **p-value pequeño** (típicamente < 0.05) nos da evidencia para rechazar la hipótesis nula. Esto sugiere que nuestra variable $X$ es un predictor útil para $Y$.\n",
        "\n",
        "## Métricas de Error de Predicción\n",
        "\n",
        "Además del $R^2$, existen múltiples métricas para evaluar qué tan bien predice nuestro modelo. Cada una tiene sus ventajas y casos de uso específicos:\n",
        "\n",
        "### Error Cuadrático Medio (MSE)\n",
        "\n",
        "El **MSE** mide el promedio de los errores al cuadrado:\n",
        "\n",
        "$$MSE = \\frac{1}{n} \\sum_{i=1}^{n} (y_i - \\hat{y}_i)^2$$\n",
        "\n",
        "- **Ventajas:** Penaliza fuertemente errores grandes, diferenciable (útil para optimización)\n",
        "- **Desventajas:** Sensible a valores atípicos, difícil de interpretar (unidades al cuadrado)\n",
        "- **Cuándo usar:** Cuando errores grandes son especialmente costosos\n",
        "\n",
        "### Raíz del Error Cuadrático Medio (RMSE)\n",
        "\n",
        "El **RMSE** es la raíz cuadrada del MSE:\n",
        "\n",
        "$$RMSE = \\sqrt{MSE} = \\sqrt{\\frac{1}{n} \\sum_{i=1}^{n} (y_i - \\hat{y}_i)^2}$$\n",
        "\n",
        "- **Ventajas:** Mismas unidades que la variable objetivo, interpretable\n",
        "- **Desventajas:** Aún sensible a valores atípicos\n",
        "- **Interpretación:** \"En promedio, nuestras predicciones se desvían X unidades del valor real\"\n",
        "\n",
        "### Error Absoluto Medio (MAE)\n",
        "\n",
        "El **MAE** mide el promedio de los errores absolutos:\n",
        "\n",
        "$$MAE = \\frac{1}{n} \\sum_{i=1}^{n} |y_i - \\hat{y}_i|$$\n",
        "\n",
        "- **Ventajas:** Robusto a valores atípicos, fácil de interpretar\n",
        "- **Desventajas:** No diferenciable en cero, trata todos los errores por igual\n",
        "- **Cuándo usar:** Cuando hay valores atípicos o todos los errores tienen igual importancia\n",
        "\n",
        "### Error Porcentual Absoluto Medio (MAPE)\n",
        "\n",
        "El **MAPE** expresa el error como porcentaje del valor real:\n",
        "\n",
        "$$MAPE = \\frac{100}{n} \\sum_{i=1}^{n} \\left|\\frac{y_i - \\hat{y}_i}{y_i}\\right|$$\n",
        "\n",
        "- **Ventajas:** Interpretable (% de error), adimensional, útil para comparar modelos en diferentes escalas\n",
        "- **Desventajas:** Indefinido cuando $y_i = 0$, asimétrico (penaliza más las sobreestimaciones)\n",
        "- **Interpretación:** \"Nuestras predicciones se desvían en promedio X% del valor real\"\n",
        "- **Cuándo usar:** Para comparar precisión entre diferentes productos, regiones, o escalas\n",
        "\n",
        "### Error Porcentual Absoluto Medio Simétrico (SMAPE)\n",
        "\n",
        "El **SMAPE** es una versión simétrica del MAPE:\n",
        "\n",
        "$$SMAPE = \\frac{100}{n} \\sum_{i=1}^{n} \\frac{|y_i - \\hat{y}_i|}{(|y_i| + |\\hat{y}_i|)/2}$$\n",
        "\n",
        "- **Ventajas:** Simétrico, acotado entre 0% y 200%\n",
        "- **Desventajas:** Puede ser contraintuitivo, no tan estándar como MAPE\n",
        "- **Cuándo usar:** Cuando queremos evitar el sesgo del MAPE hacia sobreestimaciones\n",
        "\n",
        "### Error Logarítmico Cuadrático Medio (MSLE)\n",
        "\n",
        "El **MSLE** usa transformación logarítmica:\n",
        "\n",
        "$$MSLE = \\frac{1}{n} \\sum_{i=1}^{n} (\\log(1 + y_i) - \\log(1 + \\hat{y}_i))^2$$\n",
        "\n",
        "- **Ventajas:** Penaliza más las subestimaciones que las sobreestimaciones\n",
        "- **Desventajas:** Solo para valores positivos, menos interpretable\n",
        "- **Cuándo usar:** Cuando subestimar es más costoso que sobreestimar (ej: demanda de inventario)\n",
        "\n",
        "### $R^2$ Ajustado\n",
        "\n",
        "El **$R^2$ ajustado** penaliza por el número de variables en el modelo:\n",
        "\n",
        "$$R^2_{adj} = 1 - \\frac{(1-R^2)(n-1)}{n-p-1}$$\n",
        "\n",
        "Donde $p$ es el número de predictores.\n",
        "\n",
        "- **Ventajas:** No aumenta automáticamente al añadir variables\n",
        "- **Cuándo usar:** Para comparar modelos con diferente número de variables\n",
        "- **Interpretación:** Similar a $R^2$ pero más conservador\n",
        "\n",
        "#### ¿Cuál métrica elegir?\n",
        "\n",
        "La elección de métrica depende del contexto del problema:\n",
        "\n",
        "| **Métrica** | **Mejor para** | **Evitar cuando** |\n",
        "|-------------|----------------|-------------------|\n",
        "| **RMSE** | Errores grandes son costosos | Hay muchos valores atípicos |\n",
        "| **MAE** | Errores tienen igual importancia | Necesitas diferenciabilidad |\n",
        "| **MAPE** | Comparar diferentes escalas | Hay valores cercanos a cero |\n",
        "| **SMAPE** | Comparar con simetría | Interpretación debe ser simple |\n",
        "| **R²** | Explicar variabilidad | Solo importa precisión de predicción |\n",
        "\n",
        "::: {.callout-tip}\n",
        "## **Recomendación práctica**\n",
        "Usa **múltiples métricas** para evaluar tu modelo. Una combinación típica sería:\n",
        "- **RMSE** para precisión general\n",
        "- **MAPE** para interpretabilidad de negocio  \n",
        "- **R²** para explicación de variabilidad\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "## Regresión Lineal Múltiple\n",
        "\n",
        "Ahora, ¿qué pasa si tenemos múltiples predictores ($X_1, X_2, ..., X_p$)? El modelo se expande:\n",
        "\n",
        "$$Y = \\beta_0 + \\beta_1 X_1 + \\beta_2 X_2 + ... + \\beta_p X_p + \\epsilon$$\n",
        "\n",
        "La intuición es la misma, pero en lugar de ajustar una línea, estamos ajustando un **hiperplano** en un espacio multidimensional.\n",
        "\n",
        "Para manejar esto de forma elegante, usamos notación matricial:\n",
        "\n",
        "$$\\mathbf{y} = \\mathbf{X}\\boldsymbol{\\beta} + \\boldsymbol{\\epsilon}$$\n",
        "\n",
        "Donde:\n",
        "- $\\mathbf{y}$ es el vector de observaciones.\n",
        "- $\\mathbf{X}$ es la matriz de diseño (con una primera columna de unos para el intercepto).\n",
        "- $\\boldsymbol{\\beta}$ es el vector de coeficientes.\n",
        "- $\\boldsymbol{\\epsilon}$ es el vector de errores.\n",
        "\n",
        "La función de costo en forma matricial es:\n",
        "$$J(\\boldsymbol{\\beta}) = (\\mathbf{y} - \\mathbf{X}\\boldsymbol{\\beta})^T (\\mathbf{y} - \\mathbf{X}\\boldsymbol{\\beta})$$\n",
        "\n",
        "---\n",
        "\n",
        "## Transformaciones Comunes en Modelos Lineales\n",
        "\n",
        "A veces, la relación entre X e Y no es estrictamente lineal. Las transformaciones logarítmicas nos permiten modelar relaciones no lineales y, además, ofrecen interpretaciones muy útiles en términos de cambios porcentuales.\n",
        "\n",
        "### Modelo Log-Nivel (Transformación en Y)\n",
        "\n",
        "Este modelo se usa cuando el efecto de X sobre Y no es absoluto, sino porcentual. Por ejemplo, cómo un año más de educación afecta el *porcentaje* de aumento salarial.\n",
        "\n",
        "-   **Ecuación:** $\\ln(Y) = \\beta_0 + \\beta_1 X + \\epsilon$\n",
        "-   **Interpretación:** Un **incremento de una unidad** en $X$ está asociado con un cambio de $(100 \\cdot \\beta_1)\\%$ en $Y$.\n",
        "\n",
        "\n",
        "\n",
        "::: {.callout-note collapse=\"true\"}\n",
        "#### Explicación Matemática de la Aproximación\n",
        "La clave está en la propiedad del logaritmo y el cálculo. La derivada de $\\ln(Y)$ con respecto a $X$ es $\\beta_1$:\n",
        "$$\\frac{d(\\ln(Y))}{dX} = \\beta_1$$\n",
        "Sabemos que $d(\\ln(Y)) = \\frac{dY}{Y}$. Por tanto:\n",
        "$$\\frac{dY/Y}{dX} = \\beta_1$$\n",
        "Para cambios pequeños (o discretos, $\\Delta$), podemos aproximar los diferenciales:\n",
        "$$\\beta_1 \\approx \\frac{\\Delta Y / Y}{\\Delta X}$$\n",
        "Si consideramos un cambio unitario en X, $\\Delta X = 1$, entonces:\n",
        "$$\\beta_1 \\approx \\frac{\\Delta Y}{Y}$$\n",
        "Esto significa que $\\beta_1$ es la aproximación del cambio porcentual en $Y$ ante un cambio de una unidad en $X$.\n",
        ":::\n",
        "\n",
        "### Modelo Nivel-Log (Transformación en X)\n",
        "\n",
        "Este modelo es útil cuando el efecto de X sobre Y se reduce a medida que X aumenta (rendimientos decrecientes). Por ejemplo, el efecto de añadir presupuesto de marketing sobre las ventas.\n",
        "\n",
        "-   **Ecuación:** $Y = \\beta_0 + \\beta_1 \\ln(X) + \\epsilon$\n",
        "-   **Interpretación:** Un **incremento del 1%** en $X$ está asociado con un cambio de $(\\beta_1 / 100)$ **unidades** en $Y$.\n",
        "\n",
        "::: {.callout-note collapse=\"true\"}\n",
        "#### Explicación Matemática de la Aproximación\n",
        "Tomamos la derivada de $Y$ con respecto a $\\ln(X)$:\n",
        "$$\\frac{dY}{d(\\ln(X))} = \\beta_1$$\n",
        "Usando la regla de la cadena, sabemos que $d(\\ln(X)) = \\frac{dX}{X}$. Sustituyendo:\n",
        "$$\\frac{dY}{dX/X} = \\beta_1 \\implies dY = \\beta_1 \\frac{dX}{X}$$\n",
        "Para cambios discretos, aproximamos:\n",
        "$$\\Delta Y \\approx \\beta_1 \\frac{\\Delta X}{X}$$\n",
        "Si consideramos un cambio del 1% en X, entonces $\\frac{\\Delta X}{X} = 0.01$. La ecuación se convierte en:\n",
        "$$\\Delta Y \\approx \\beta_1 (0.01) = \\frac{\\beta_1}{100}$$\n",
        "Esto significa que un cambio del 1% en $X$ provoca un cambio de $\\beta_1/100$ unidades en $Y$.\n",
        ":::\n",
        "\n",
        "### Modelo Log-Log (Transformación en X e Y)\n",
        "\n",
        "Este modelo es muy común en economía y modela la **elasticidad** constante entre dos variables.\n",
        "\n",
        "-   **Ecuación:** $\\ln(Y) = \\beta_0 + \\beta_1 \\ln(X) + \\epsilon$\n",
        "-   **Interpretación:** Un **incremento del 1%** en $X$ está asociado con un cambio del $\\beta_1\\%$ en $Y$.\n",
        "\n",
        "\n",
        "\n",
        "::: {.callout-note collapse=\"true\"}\n",
        "#### Explicación Matemática de la Aproximación\n",
        "Este caso combina los dos anteriores. $\\beta_1$ es la derivada de $\\ln(Y)$ con respecto a $\\ln(X)$, que es la definición de elasticidad.\n",
        "$$\\beta_1 = \\frac{d(\\ln(Y))}{d(\\ln(X))}$$\n",
        "Usando las propiedades del cálculo que vimos antes:\n",
        "$$\\beta_1 = \\frac{dY/Y}{dX/X}$$\n",
        "Aproximando para cambios discretos:\n",
        "$$\\beta_1 \\approx \\frac{\\Delta Y / Y}{\\Delta X / X}$$\n",
        "Esta es la definición de elasticidad: el cambio porcentual en $Y$ dividido por el cambio porcentual en $X$. Por lo tanto, si $X$ cambia en un 1% ($\\Delta X / X = 0.01$), el cambio porcentual en $Y$ ($\\Delta Y / Y$) será aproximadamente $\\beta_1 \\times 0.01$, es decir, un $\\beta_1\\%$.\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "## Regresión Regularizada (Penalizada) 🎯\n",
        "\n",
        "Hasta ahora hemos visto la regresión lineal clásica, pero ¿qué pasa cuando tenemos **muchas variables** o cuando nuestro modelo sufre de **sobreajuste**? Aquí es donde entran las técnicas de **regularización**.\n",
        "\n",
        "### ¿Por qué necesitamos regularización?\n",
        "\n",
        "La regresión lineal ordinaria (OLS) puede presentar varios problemas:\n",
        "\n",
        "1. **Sobreajuste**: Cuando tenemos muchas variables relativas al número de observaciones\n",
        "2. **Multicolinealidad**: Variables predictoras altamente correlacionadas\n",
        "3. **Inestabilidad**: Pequeños cambios en los datos causan grandes cambios en los coeficientes\n",
        "4. **Interpretabilidad**: Demasiadas variables hacen difícil entender el modelo\n",
        "\n",
        "La **regularización** añade una **penalización** a la función de costo para controlar la complejidad del modelo.\n",
        "\n",
        "---\n",
        "\n",
        "### Ridge Regression (Regresión Ridge) 🏔️\n",
        "\n",
        "La **regresión Ridge** añade una penalización **L2** (suma de cuadrados) a los coeficientes:\n",
        "\n",
        "$$J_{Ridge}(\\boldsymbol{\\beta}) = \\sum_{i=1}^{n} (y_i - \\mathbf{x}_i^T\\boldsymbol{\\beta})^2 + \\lambda \\sum_{j=1}^{p} \\beta_j^2$$\n",
        "\n",
        "Donde:\n",
        "- $\\lambda > 0$ es el **parámetro de regularización**\n",
        "- $\\sum_{j=1}^{p} \\beta_j^2$ es la **penalización L2**\n",
        "\n",
        "#### Características de Ridge:\n",
        "\n",
        "✅ **Ventajas:**\n",
        "- Reduce el sobreajuste\n",
        "- Maneja bien la multicolinealidad\n",
        "- Siempre tiene solución única\n",
        "- Estabiliza los coeficientes\n",
        "\n",
        "❌ **Desventajas:**\n",
        "- **NO** elimina variables (coeficientes nunca son exactamente cero)\n",
        "- Dificulta la interpretabilidad\n",
        "- Requiere estandarizar las variables\n",
        "\n",
        "#### Solución Analítica:\n",
        "\n",
        "$$\\hat{\\boldsymbol{\\beta}}_{Ridge} = (\\mathbf{X}^T\\mathbf{X} + \\lambda\\mathbf{I})^{-1}\\mathbf{X}^T\\mathbf{y}$$\n",
        "\n",
        "El término $\\lambda\\mathbf{I}$ hace que la matriz sea invertible incluso con multicolinealidad.\n",
        "\n",
        "#### ¿Cómo elegir λ?\n",
        "\n",
        "- **λ = 0**: Regresión ordinaria (sin penalización)\n",
        "- **λ → ∞**: Todos los coeficientes → 0\n",
        "- **λ óptimo**: Se encuentra usando **validación cruzada**\n",
        "\n",
        "---\n",
        "\n",
        "### Lasso Regression (Least Absolute Shrinkage and Selection Operator) ✂️\n",
        "\n",
        "La **regresión Lasso** usa penalización **L1** (suma de valores absolutos):\n",
        "\n",
        "$$J_{Lasso}(\\boldsymbol{\\beta}) = \\sum_{i=1}^{n} (y_i - \\mathbf{x}_i^T\\boldsymbol{\\beta})^2 + \\lambda \\sum_{j=1}^{p} |\\beta_j|$$\n",
        "\n",
        "#### Características de Lasso:\n",
        "\n",
        "✅ **Ventajas:**\n",
        "- **Selección automática de variables** (coeficientes = 0)\n",
        "- Modelos más interpretables y simples\n",
        "- Útil cuando muchas variables son irrelevantes\n",
        "\n",
        "❌ **Desventajas:**\n",
        "- Puede ser inestable con grupos de variables correlacionadas\n",
        "- Selecciona arbitrariamente entre variables correlacionadas\n",
        "- No tiene solución analítica cerrada\n",
        "\n",
        "#### La \"Magia\" de L1: ¿Por qué produce ceros exactos?\n",
        "\n",
        "La penalización L1 crea una región factible con **esquinas puntiagudas**. La solución óptima tiende a ocurrir en estas esquinas, donde algunos coeficientes son exactamente cero.\n",
        "\n",
        "::: {.callout-note collapse=\"true\"}\n",
        "## Intuición Geométrica\n",
        "Imagina que estás minimizando una función bajo la restricción de que $|\\beta_1| + |\\beta_2| \\leq t$. Esta restricción forma un **diamante** en 2D. La función objetivo forma **elipses**. La solución está donde la elipse más pequeña toca el diamante, y esto frecuentemente ocurre en los vértices (donde $\\beta_1 = 0$ o $\\beta_2 = 0$).\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "### Elastic Net: Lo Mejor de Ambos Mundos 🕸️\n",
        "\n",
        "**Elastic Net** combina las penalizaciones L1 y L2:\n",
        "\n",
        "$$J_{ElasticNet}(\\boldsymbol{\\beta}) = \\sum_{i=1}^{n} (y_i - \\mathbf{x}_i^T\\boldsymbol{\\beta})^2 + \\lambda_1 \\sum_{j=1}^{p} |\\beta_j| + \\lambda_2 \\sum_{j=1}^{p} \\beta_j^2$$\n",
        "\n",
        "O equivalentemente, con un parámetro de mezcla $\\alpha$:\n",
        "\n",
        "$$J_{ElasticNet}(\\boldsymbol{\\beta}) = \\sum_{i=1}^{n} (y_i - \\mathbf{x}_i^T\\boldsymbol{\\beta})^2 + \\lambda \\left[ \\alpha \\sum_{j=1}^{p} |\\beta_j| + (1-\\alpha) \\sum_{j=1}^{p} \\beta_j^2 \\right]$$\n",
        "\n",
        "Donde:\n",
        "- $\\alpha \\in [0,1]$ controla la mezcla entre L1 y L2\n",
        "- $\\alpha = 0$: Pure Ridge\n",
        "- $\\alpha = 1$: Pure Lasso\n",
        "- $\\alpha = 0.5$: Igual peso a ambas penalizaciones\n",
        "\n",
        "#### Características de Elastic Net:\n",
        "\n",
        "✅ **Ventajas:**\n",
        "- **Selección de variables** como Lasso\n",
        "- **Estabilidad** como Ridge\n",
        "- Maneja bien **grupos de variables correlacionadas**\n",
        "- Más flexible que Ridge o Lasso por separado\n",
        "\n",
        "❌ **Desventajas:**\n",
        "- Dos hiperparámetros para ajustar ($\\lambda$ y $\\alpha$)\n",
        "- Más complejo computacionalmente\n",
        "\n",
        "---\n",
        "\n",
        "### Comparación Visual: Ridge vs Lasso vs Elastic Net\n",
        "\n",
        "| **Aspecto** | **Ridge** | **Lasso** | **Elastic Net** |\n",
        "|-------------|-----------|-----------|-----------------|\n",
        "| **Penalización** | L2: $\\sum \\beta_j^2$ | L1: $\\sum |\\beta_j|$ | L1 + L2 combinadas |\n",
        "| **Selección de variables** | ❌ No | ✅ Sí | ✅ Sí |\n",
        "| **Coeficientes exactamente cero** | ❌ No | ✅ Sí | ✅ Sí |\n",
        "| **Manejo de multicolinealidad** | ✅ Excelente | ⚠️ Problemático | ✅ Muy bueno |\n",
        "| **Estabilidad** | ✅ Alta | ⚠️ Media | ✅ Alta |\n",
        "| **Interpretabilidad** | ⚠️ Media | ✅ Alta | ✅ Alta |\n",
        "| **Cuando usar** | Todas las variables importan | Pocas variables importantes | Situaciones mixtas |\n",
        "\n",
        "### ¿Cuándo usar cada método?\n",
        "\n",
        "#### Usa **Ridge** cuando:\n",
        "- Crees que **todas las variables** contribuyen al modelo\n",
        "- Tienes **multicolinealidad** severa\n",
        "- Quieres **estabilizar** coeficientes sin eliminar variables\n",
        "- El número de observaciones es **pequeño** relativo a variables\n",
        "\n",
        "#### Usa **Lasso** cuando:\n",
        "- Crees que **pocas variables** son realmente importantes\n",
        "- Quieres un modelo **simple e interpretable**\n",
        "- Necesitas **selección automática** de variables\n",
        "- Tienes muchas variables **irrelevantes**\n",
        "\n",
        "#### Usa **Elastic Net** cuando:\n",
        "- No estás seguro de cuántas variables son importantes\n",
        "- Tienes **grupos de variables correlacionadas**\n",
        "- Quieres balancear **selección** y **estabilidad**\n",
        "- Es tu **primera opción** cuando no conoces la estructura de los datos\n",
        "\n",
        "---\n",
        "\n",
        "### Validación de Modelos y Selección de Hiperparámetros\n",
        "\n",
        "#### ¿Por qué necesitamos dividir nuestros datos?\n",
        "\n",
        "Cuando construimos modelos de machine learning, enfrentamos un dilema fundamental: **¿cómo sabemos si nuestro modelo funcionará bien con datos nuevos?**\n",
        "\n",
        "##### El Problema del Sobreajuste\n",
        "\n",
        "Imagina que estás preparándote para un examen. Si solo estudias las preguntas exactas que aparecerán en el examen, podrías obtener una calificación perfecta. Pero si las preguntas cambian ligeramente, tu rendimiento se desplomaría. Esto es **sobreajuste**: el modelo memoriza los datos de entrenamiento pero no generaliza.\n",
        "\n",
        "#### División Típica de Datos: Entrenamiento/Validación/Prueba\n",
        "\n",
        "La estrategia estándar es dividir nuestros datos en **tres conjuntos**:\n",
        "\n",
        "```\n",
        "📊 Dataset Completo (100%)\n",
        "├── 🏋️ Entrenamiento (60%) - Para ajustar coeficientes\n",
        "├── 🎯 Validación (20%)     - Para seleccionar hiperparámetros  \n",
        "└── 🧪 Prueba (20%)         - Para evaluación final\n",
        "```\n",
        "\n",
        "##### Conjunto de Entrenamiento (60%)\n",
        "- **Propósito**: Ajustar los coeficientes $\\beta$ del modelo\n",
        "- **Analogía**: Los ejercicios que haces para aprender\n",
        "\n",
        "##### Conjunto de Validación (20%)\n",
        "- **Propósito**: Comparar diferentes hiperparámetros (como $\\lambda$ en Ridge/Lasso)\n",
        "- **Analogía**: Exámenes de práctica para decidir qué estrategia de estudio funciona mejor\n",
        "\n",
        "##### Conjunto de Prueba (20%)\n",
        "- **Propósito**: Evaluación final y honesta del modelo\n",
        "- **Analogía**: El examen final real\n",
        "- **⚠️ Regla de Oro**: ¡Solo se usa UNA vez al final!\n",
        "\n",
        "#### ¿Qué pasa si tenemos pocos datos?\n",
        "\n",
        "Cuando nuestro dataset es pequeño (< 1000 observaciones), dividir en tres partes puede ser problemático:\n",
        "\n",
        "❌ **Problemas con datasets pequeños:**\n",
        "- Conjunto de entrenamiento muy pequeño → modelo pobre\n",
        "- Conjunto de validación pequeño → selección inestable de hiperparámetros\n",
        "- Conjunto de prueba pequeño → evaluación poco confiable\n",
        "\n",
        "**Solución**: ¡Validación Cruzada!\n",
        "\n",
        "---\n",
        "\n",
        "#### Validación Cruzada (Cross-Validation)\n",
        "\n",
        "La **validación cruzada** es una técnica que maximiza el uso de nuestros datos limitados. En lugar de usar una sola división, usamos **múltiples divisiones**.\n",
        "\n",
        "##### Validación Cruzada k-fold\n",
        "\n",
        "El método más común es **k-fold cross-validation**:\n",
        "\n",
        "1. **Dividir** el dataset en $k$ \"pliegues\" (folds) de igual tamaño\n",
        "2. **Repetir** $k$ veces:\n",
        "   - Usar $k-1$ pliegues para entrenamiento\n",
        "   - Usar 1 pliegue para validación\n",
        "3. **Promediar** los resultados de las $k$ evaluaciones"
      ],
      "id": "9bd20770"
    },
    {
      "cell_type": "code",
      "metadata": {
        "fig-width": 12,
        "fig-height": 8
      },
      "source": [
        "#| label: cv-visualization\n",
        "#| fig-cap: Visualización de 5-Fold Cross Validation mostrando cómo se dividen los datos en cada iteración\n",
        "#| echo: false\n",
        "\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import matplotlib.patches as patches\n",
        "import matplotlib\n",
        "matplotlib.rcParams['figure.dpi'] = 150  # Higher DPI for better quality\n",
        "\n",
        "# Visualización de 5-Fold Cross Validation\n",
        "fig, axes = plt.subplots(5, 1, figsize=(12, 8))\n",
        "fig.suptitle('Validación Cruzada 5-Fold: División de Datos', fontsize=16, fontweight='bold')\n",
        "\n",
        "k = 5\n",
        "colors = ['lightblue', 'lightcoral']\n",
        "\n",
        "for fold in range(k):\n",
        "    ax = axes[fold]\n",
        "    \n",
        "    # Crear rectángulos para cada fold\n",
        "    for i in range(k):\n",
        "        if i == fold:\n",
        "            # Este es el fold de validación\n",
        "            rect = patches.Rectangle((i, 0), 1, 1, linewidth=2, \n",
        "                                   edgecolor='red', facecolor=colors[1])\n",
        "            ax.add_patch(rect)\n",
        "        else:\n",
        "            # Estos son los folds de entrenamiento\n",
        "            rect = patches.Rectangle((i, 0), 1, 1, linewidth=2, \n",
        "                                   edgecolor='blue', facecolor=colors[0])\n",
        "            ax.add_patch(rect)\n",
        "    \n",
        "    # Configurar ejes\n",
        "    ax.set_xlim(0, k)\n",
        "    ax.set_ylim(0, 1)\n",
        "    ax.set_xticks(np.arange(k) + 0.5)\n",
        "    ax.set_xticklabels([f'Fold {i+1}' for i in range(k)])\n",
        "    ax.set_yticks([])\n",
        "    ax.set_ylabel(f'Iteración {fold+1}', rotation=0, ha='right', va='center')\n",
        "    \n",
        "    # Añadir título para la primera iteración\n",
        "    if fold == 0:\n",
        "        ax.text(k/2, 1.3, 'División de Datos en Cada Iteración', \n",
        "                ha='center', va='center', fontsize=12, fontweight='bold')\n",
        "\n",
        "# Añadir leyenda\n",
        "legend_elements = [patches.Patch(facecolor=colors[0], edgecolor='blue', label='Entrenamiento'),\n",
        "                  patches.Patch(facecolor=colors[1], edgecolor='red', label='Validación')]\n",
        "fig.legend(handles=legend_elements, loc='center right', bbox_to_anchor=(0.95, 0.5))\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "cv-visualization",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "##### Ventajas de la Validación Cruzada\n",
        "\n",
        "✅ **Maximiza el uso de datos**: Cada observación se usa tanto para entrenamiento como validación\n",
        "\n",
        "✅ **Estimación más robusta**: Promedia múltiples evaluaciones independientes\n",
        "\n",
        "✅ **Reduce la varianza**: Menos dependiente de una división particular\n",
        "\n",
        "✅ **Detecta inestabilidad**: Si los resultados varían mucho entre folds, el modelo es inestable\n",
        "\n",
        "#### Validación Cruzada para Selección de Hiperparámetros\n",
        "\n",
        "En regresión regularizada, usamos CV para encontrar el mejor $\\lambda$:"
      ],
      "id": "a20aaba0"
    },
    {
      "cell_type": "code",
      "metadata": {
        "fig-width": 12,
        "fig-height": 6
      },
      "source": [
        "#| label: validation-curve\n",
        "#| fig-cap: Curva de validación mostrando cómo seleccionar el hiperparámetro óptimo λ usando validación cruzada\n",
        "#| echo: false\n",
        "\n",
        "# Ejemplo conceptual de selección de hiperparámetros\n",
        "alphas = np.logspace(-3, 2, 20)  # Valores de lambda a probar\n",
        "cv_scores = []\n",
        "\n",
        "print(\"🎯 SELECCIÓN DE HIPERPARÁMETROS CON VALIDACIÓN CRUZADA\")\n",
        "print(\"=\" * 60)\n",
        "print(\"Para cada valor de λ:\")\n",
        "print(\"  1. Aplicar 5-fold CV\")\n",
        "print(\"  2. Calcular error promedio\")\n",
        "print(\"  3. Seleccionar λ con menor error\")\n",
        "\n",
        "# Simular scores para visualización\n",
        "np.random.seed(42)\n",
        "true_minimum = 0.1\n",
        "cv_scores = []\n",
        "\n",
        "for alpha in alphas:\n",
        "    # Simular error de CV (menor cerca del óptimo)\n",
        "    distance = abs(np.log10(alpha) - np.log10(true_minimum))\n",
        "    base_error = 0.5 + distance**2 * 0.1\n",
        "    noise = np.random.normal(0, 0.05)\n",
        "    cv_scores.append(base_error + noise)\n",
        "\n",
        "cv_scores = np.array(cv_scores)\n",
        "\n",
        "# Encontrar el mejor alpha\n",
        "best_idx = np.argmin(cv_scores)\n",
        "best_alpha = alphas[best_idx]\n",
        "\n",
        "# Graficar curva de validación\n",
        "plt.figure(figsize=(12, 6))\n",
        "plt.plot(alphas, cv_scores, 'bo-', alpha=0.7, label='Error de Validación Cruzada')\n",
        "plt.axvline(x=best_alpha, color='red', linestyle='--', \n",
        "           label=f'λ óptimo = {best_alpha:.3f}')\n",
        "plt.scatter([best_alpha], [cv_scores[best_idx]], color='red', s=100, zorder=5)\n",
        "\n",
        "plt.xscale('log')\n",
        "plt.xlabel('λ (Parámetro de Regularización)')\n",
        "plt.ylabel('Error de Validación Cruzada')\n",
        "plt.title('Curva de Validación: Selección de Hiperparámetros')\n",
        "plt.legend()\n",
        "plt.grid(True, alpha=0.3)\n",
        "\n",
        "# Añadir anotaciones\n",
        "plt.annotate('Infraajuste\\n(λ muy alto)', \n",
        "            xy=(10, 0.7), xytext=(50, 0.8),\n",
        "            arrowprops=dict(arrowstyle='->', color='orange', alpha=0.7),\n",
        "            fontsize=10, ha='center', color='orange')\n",
        "\n",
        "plt.annotate('Sobreajuste\\n(λ muy bajo)', \n",
        "            xy=(0.01, 0.6), xytext=(0.003, 0.9),\n",
        "            arrowprops=dict(arrowstyle='->', color='purple', alpha=0.7),\n",
        "            fontsize=10, ha='center', color='purple')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n",
        "print(f\"\\n📈 Resultado: λ óptimo = {best_alpha:.4f}\")\n",
        "print(f\"📉 Error de CV mínimo = {cv_scores[best_idx]:.4f}\")"
      ],
      "id": "validation-curve",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "#### Proceso Completo de Validación\n",
        "\n",
        "El flujo completo para modelos regularizados es:\n",
        "\n",
        "```\n",
        "1. 📊 Dividir datos originales\n",
        "   └── 80% para desarrollo (entrenamiento + validación)\n",
        "   └── 20% para prueba final (¡NO TOCAR hasta el final!)\n",
        "\n",
        "2. 🔄 En el conjunto de desarrollo:\n",
        "   └── Para cada λ candidato:\n",
        "       ├── Aplicar k-fold CV\n",
        "       ├── Calcular error promedio\n",
        "       └── Guardar resultado\n",
        "\n",
        "3. 🎯 Seleccionar λ con menor error de CV\n",
        "\n",
        "4. 🏗️ Entrenar modelo final con λ óptimo en TODO el conjunto de desarrollo\n",
        "\n",
        "5. 🧪 Evaluación final en conjunto de prueba\n",
        "```\n",
        "\n",
        "#### Variantes de Validación Cruzada\n",
        "\n",
        "##### Leave-One-Out CV (LOOCV)\n",
        "- **k = n** (número de observaciones)\n",
        "- **Ventaja**: Máximo uso de datos para entrenamiento\n",
        "- **Desventaja**: Computacionalmente costoso, alta varianza\n",
        "\n",
        "##### Stratified CV\n",
        "- **Para problemas de clasificación**\n",
        "- Mantiene la proporción de clases en cada fold\n",
        "\n",
        "##### Time Series CV\n",
        "- **Para datos temporales**\n",
        "- Respeta el orden temporal (no mezcla futuro con pasado)"
      ],
      "id": "731baab8"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/xwing/miniforge3/envs/mineria_datos/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}